from telethon import events, functions, types
from .. import loader, utils
import datetime
from PIL import Image, ImageDraw, ImageFont
import io

class CommandLoggerMod(loader.Module):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –∏–ª–∏ –≥—Ä—É–ø–ø—É"""
    strings = {"name": "CommandLogger"}

    def __init__(self):
        self.client = None
        self.logging_enabled = False  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–∫–ª—é—á–µ–Ω–æ
        self.log_chat = None  # –•—Ä–∞–Ω–∏—Ç ID –∏–ª–∏ username –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ª–æ–≥–æ–≤

    async def client_ready(self, client, db):
        """–≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ."""
        self.client = client
        await self.ensure_log_group()

    async def ensure_log_group(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º 'Command Logger' –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏"""
        async for dialog in self.client.iter_dialogs():
            if dialog.name == "Command Logger" and isinstance(dialog.entity, types.Chat):
                self.log_chat = dialog.entity.id
                print(f"–°—É—â–µ—Å—Ç–≤—É—é—â–∞—è –≥—Ä—É–ø–ø–∞ 'Command Logger' –Ω–∞–π–¥–µ–Ω–∞ —Å ID: {self.log_chat}")
                return

        try:
            result = await self.client(functions.messages.CreateChatRequest(
                users=[],
                title="Command Logger"
            ))
            self.log_chat = result.chats[0].id
            print(f"–ü—Ä–∏–≤–∞—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞ 'Command Logger' —Å–æ–∑–¥–∞–Ω–∞ —Å ID: {self.log_chat}")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ–π –≥—Ä—É–ø–ø—ã: {e}")

    async def log_command(self, event):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª/—á–∞—Ç"""
        if not self.logging_enabled or not self.log_chat:
            return

        try:
            message = event.raw_text
            command = message.split()[0] if message else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

            # –ü—Ä–æ–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã .cmdlog
            if command == ".cmdlog":
                return

            args = " ".join(message.split()[1:]) if len(message.split()) > 1 else "–ù–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤"
            timestamp = datetime.datetime.now()
            time_str = timestamp.strftime("%H:%M")  # –í—Ä–µ–º—è
            date_str = timestamp.strftime("%d.%m.%y")  # –î–∞—Ç–∞

            log_text = f"–í—Ä–µ–º—è: {time_str}\n|\n–î–∞—Ç–∞: {date_str}\n|\n–ö–æ–º–∞–Ω–¥–∞: {command}\n|\n–ê—Ä–≥—É–º–µ–Ω—Ç—ã: {args}"

            await self.client.send_message(self.log_chat, log_text)
        except Exception as e:
            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–≥: {e}")

    async def watcher(self, event):
        """–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –≤ –ª—é–±–æ–º —á–∞—Ç–µ, –≥–¥–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å —Ç–æ—á–∫–∏"""
        if not event.text.startswith("."):
            return

        # –ï—Å–ª–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥–∏ –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —á–∞—Ç
        if self.logging_enabled:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞ –≤ —á–∞—Ç–µ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
            if event.chat and event.chat.id != self.log_chat:
                await self.log_command(event)

    async def cmdlogcmd(self, message):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥"""
        self.logging_enabled = not self.logging_enabled

        if self.logging_enabled:
            await message.edit(f"üìã –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –≤–∫–ª—é—á–µ–Ω–æ. –õ–æ–≥–∏ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ –≥—Ä—É–ø–ø—É 'Command Logger'.")
        else:
            await message.edit(f"üìã –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –≤—ã–∫–ª—é—á–µ–Ω–æ –¥–ª—è –≥—Ä—É–ø–ø—ã 'Command Logger'.")