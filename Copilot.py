from telethon.tl.types import Message
import asyncio
from .. import loader, utils

@loader.tds
class Copilot(loader.Module):
    """
    –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π ChatGPT.
    –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ @CopilotOfficialBot.
    """

    strings = {
        "name": "Copilot",
        "no_args": "üö´ –ù–µ —É–∫–∞–∑–∞–Ω —Ç–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏!",
    }

    def __init__(self):
        self.name = self.strings["name"]

    async def client_ready(self, client, db):
        self.client = client
        self.db = db
        self.gpt_free = "@CopilotOfficialBot"

    async def message_q(self, text: str, user_id: int):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ –æ—Ç–≤–µ—Ç—ã (–≤–∫–ª—é—á–∞—è —Ç–µ–∫—Å—Ç –∏ –º–µ–¥–∏–∞)"""
        async with self.client.conversation(user_id) as conv:
            msg = await conv.send_message(text)
            responses = []

            while True:
                response = await conv.get_response()
                if "‚úÖ –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω" in response.text or "–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞" in response.text:
                    continue

                responses.append(response)

                # –ó–∞–≤–µ—Ä—à–∞–µ–º, –µ—Å–ª–∏ –º—ã –Ω–µ –ø–æ–ª—É—á–∞–µ–º –º–µ–¥–∏–∞ –∏ —Ç–µ–∫—Å—Ç, –ø–æ—Å–ª–µ —á–µ–≥–æ –º–æ–∂–Ω–æ –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å —Ü–∏–∫–ª
                if not response.media and response.text and not response.text.startswith('–û–∂–∏–¥–∞–Ω–∏–µ'):
                    break

            return responses

    async def handle_response(self, response: Message, chat_id: int, reply_to: int = None):
        """–ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –≤—Å–µ –º–µ–¥–∏–∞ –∏ —Ç–µ–∫—Å—Ç –æ—Ç –±–æ—Ç–∞ @CopilotOfficialBot –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —á–∞—Ç"""
        if response.media:
            # –ï—Å–ª–∏ –º–µ–¥–∏–∞ (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –≤–∏–¥–µ–æ, —Ñ–∞–π–ª –∏ —Ç.–¥.), –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —á–∞—Ç
            await self.client.send_file(chat_id, response.media, reply_to=reply_to)
        elif response.text:
            # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —á–∞—Ç
            await self.client.send_message(chat_id, response.text, reply_to=reply_to)

    async def tcmd(self, message: Message):
        """
        {text} - –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ ChatGPT
        """
        args = utils.get_args_raw(message)
        reply = await message.get_reply_message()

        if args:
            query = args
        elif reply:
            query = reply.text
        else:
            await message.edit(self.strings["no_args"])
            return

        reply_to = message.reply_to_msg_id if message.is_reply else None  # –ü–æ–ª—É—á–∞–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –¥–∞–Ω –æ—Ç–≤–µ—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å
        chat_id = message.chat_id

        await message.delete()  # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

        responses = await self.message_q(query, self.gpt_free)

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ –æ—Ç–≤–µ—Ç—ã –æ—Ç –±–æ—Ç–∞ @CopilotOfficialBot
        for response in responses:
            await self.handle_response(response, chat_id, reply_to)

    async def dgptcmd(self, message: Message):
        """
        - —Å–±—Ä–æ—Å–∏—Ç—å –¥–∏–∞–ª–æ–≥ –∏ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π
        """
        await self.message_q("/clear", self.gpt_free)
        await message.delete()  # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

    async def cimgcmd(self, message: Message):
        """
        {text} - —Å–æ–∑–¥–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –±–æ—Ç –∏ –ø–µ—Ä–µ—Å–ª–∞—Ç—å –≤ —Ç–µ–∫—É—â–∏–π —á–∞—Ç
        """
        args = utils.get_args_raw(message)
        reply = await message.get_reply_message()

        if args:
            query = "—Å–æ–∑–¥–∞–π " + args
        elif reply:
            query = "—Å–æ–∑–¥–∞–π " + reply.text
        else:
            await message.edit(self.strings["no_args"])
            return

        bot = self.gpt_free
        reply_to = message.reply_to_msg_id if message.is_reply else None  # –ü–æ–ª—É—á–∞–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –¥–∞–Ω –æ—Ç–≤–µ—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å
        chat_id = message.chat_id

        await message.delete()  # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

        async with self.client.conversation(bot) as conv:
            await conv.send_message(query)
            response_text = await conv.get_response()
            response_img = await conv.get_response()

            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ–∫—Å—Ç –∏ –∂–¥–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            if response_img.media:
                await self.client.send_file(chat_id, response_img.media, reply_to=reply_to)
            else:
                await self.client.send_message(chat_id, "Failed to get image from bot.", reply_to=reply_to)